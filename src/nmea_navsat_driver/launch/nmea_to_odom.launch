<launch>
  <!-- robot_description is used by nodes that publish to joint_states. -->
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder /home/tractor/catkin_ws/src/lawn_tractor_sim/urdf/lawn_tractor.urdf.xacro"/>

  <!-- Read joint positions from joint_states, then publish the vehicle's state to tf. -->
  <node name="vehicle_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="30.0"/>
  </node>


  <!-- ****** Fake localization for map to odom ***** -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0.0 0.0 0.0 0 0 0.0 map odom 100"/>

  <!-- Launch the Chip Robotics IMU driver. -->
  <node pkg="chip_imu_driver" type="chip_imu_driver_node" name="chip_imu_driver_node" output="screen">
    <param name="port" value="/dev/rosimu" />
  </node>

  <!-- Launch the nmea_serial_driver node. -->
  <node name="nmea_serial_driver_node" pkg="nmea_navsat_driver" type="nmea_serial_driver" output="screen">
    <param name="port" value="/dev/ttyUSB0"/>
    <param name="baud" value="115200" />
    <param name="frame_id" value="gps" />
    <param name="use_GNSS_time" value="False" />
    <param name="time_ref_source" value="gps" />
    <param name="useRMC" value="False" />
  </node>

  <!-- Launch the gps_odom.py script - check this I think you are doing this in a rosrun statement also. -->
  <node pkg="lawn_tractor_navigation" name="gps_odom" type="gps_odom2.py" output="screen"> 
  </node>

</launch>
